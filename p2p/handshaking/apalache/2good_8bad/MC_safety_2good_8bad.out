Apalache version: 0.15.4-SNAPSHOT build v0.15.3-24-g4b03fb2

\* 1. Checking Init satisfies IndInv:

$ apalache check --init=Init --inv=IndInv --length=0 MC_safety_2good_8bad.tla 
Assuming you bind-mounted your local directory into /var/apalache...
# Tool home: /opt/apalache
# Package:   /opt/apalache/mod-distribution/target/apalache-pkg-0.15.4-SNAPSHOT-full.jar
# JVM args: -Xmx4096m -DTLA-Library=/opt/apalache/src/tla
#
Picked up _JAVA_OPTIONS: -Djdk.net.URLClassPath.disableClassPathURLCheck=true
# APALACHE version 0.15.4-SNAPSHOT build v0.15.3-24-g4b03fb2
#
# WARNING: This tool is in the experimental stage.
#          Please report bugs at: [https://github.com/informalsystems/apalache/issues]
# 
# Usage statistics is OFF. We care about your privacy.
# If you want to help our project, consider enabling statistics with config --enable-stats=true.

Checker options: filename=MC_safety_2good_8bad.tla, init=Init, next=, inv=IndInv I@21:57:59.837
Tuning:                                                           I@21:58:00.056
PASS #0: SanyParser                                               I@21:58:00.057
Parsing file /var/apalache/MC_safety_2good_8bad.tla
Parsing file /var/apalache/Handshaking_nack_peers.tla
Parsing file /tmp/TLC.tla
Parsing file /tmp/FiniteSets.tla
Parsing file /tmp/Naturals.tla
Parsing file /tmp/Sequences.tla
PASS #1: TypeCheckerSnowcat                                       I@21:58:00.733
 > Running Snowcat .::.                                           I@21:58:00.733
 > Your types are great!                                          I@21:58:01.670
 > All expressions are typed                                      I@21:58:01.670
PASS #2: ConfigurationPass                                        I@21:58:01.758
  > MC_safety_2good_8bad.cfg: Loading TLC configuration           I@21:58:01.760
  > MC_safety_2good_8bad.cfg: Using SPECIFICATION Spec            I@21:58:01.799
  > MC_safety_2good_8bad.cfg: Init operator is set in TLC config but overridden via --init command line option; using Init W@21:58:01.799
  > Using the next predicate Next from the TLC config             I@21:58:01.799
  > MC_safety_2good_8bad.cfg: found INVARIANTS: TypeOK, NoSelfInteractions, GoodNodesOnlyConnectWithPeers, GoodNodesDoNotExceedMaxConnections, GoodNodesOnlyExchangeMessagesWithPeers, GoodNodesNeverHaveMessagesFromBlacklistedPeers, GoodNodesHaveExlcusiveInProgressAndConnections, GoodNodesOnlyConnectToNodesWithWhomTheyHaveExchangedAllMessages, GoodNodesOnlyExchangeMetaMessagesAfterSendingAndReceivingConnectionMessages, GoodNodesOnlyExchangeAckMessagesAfterSendingAndReceivingConnectionAndMetaMessages I@21:58:01.800
  > Overriding with command line arguments: --inv IndInv          W@21:58:01.800
  > Set the initialization predicate to Init                      I@21:58:01.801
  > Set the transition predicate to Next                          I@21:58:01.802
  > Set an invariant to IndInv                                    I@21:58:01.802
  > Replaced CONSTANT BAD_NODES with Bad_nodes()                  I@21:58:01.805
  > Replaced CONSTANT MIN with Min()                              I@21:58:01.805
  > Replaced CONSTANT MAX with Max()                              I@21:58:01.805
  > Replaced CONSTANT MIN_PEERS with Min_peers()                  I@21:58:01.805
  > Replaced CONSTANT GOOD_NODES with Good_nodes()                I@21:58:01.805
PASS #3: DesugarerPass                                            I@21:58:01.863
  > Desugaring...                                                 I@21:58:01.863
PASS #4: UnrollPass                                               I@21:58:01.916
  > Unroller                                                      I@21:58:01.957
PASS #5: PrimingPass                                              I@21:58:02.009
  > Introducing InitPrimed for Init'                              I@21:58:02.011
PASS #6: CoverAnalysisPass                                        I@21:58:02.052
PASS #7: InlinePass                                               I@21:58:02.053
  > InlinerOfUserOper                                             I@21:58:02.055
  > LetInExpander                                                 I@21:58:02.099
  > InlinerOfUserOper                                             I@21:58:02.111
Leaving only relevant operators: CInitPrimed, IndInv, Init, InitPrimed, Next I@21:58:02.116
PASS #8: VCGen                                                    I@21:58:02.159
  > Producing verification conditions from the invariant IndInv   I@21:58:02.159
  > VCGen produced 30 verification condition(s)                   I@21:58:02.161
PASS #9: PreprocessingPass                                        I@21:58:02.222
  > Before preprocessing: unique renaming                         I@21:58:02.223
 > Applying standard transformations:                             I@21:58:02.228
  > PrimePropagation                                              I@21:58:02.229
  > Desugarer                                                     I@21:58:02.282
  > UniqueRenamer                                                 I@21:58:02.333
  > Normalizer                                                    I@21:58:02.406
  > Keramelizer                                                   I@21:58:02.471
  > After preprocessing: UniqueRenamer                            I@21:58:02.549
PASS #10: TransitionFinderPass                                    I@21:58:02.642
  > Found 1 initializing transitions                              I@21:58:02.684
  > Found 20 transitions                                          I@21:58:02.752
  > No constant initializer                                       I@21:58:02.752
  > Applying unique renaming                                      I@21:58:02.752
PASS #11: OptimizationPass                                        I@21:58:02.829
 > Applying optimizations:                                        I@21:58:02.833
  > ConstSimplifier                                               I@21:58:02.834
  > ExprOptimizer                                                 I@21:58:02.870
  > ConstSimplifier                                               I@21:58:02.897
PASS #12: AnalysisPass                                            I@21:58:02.975
 > Marking skolemizable existentials and sets to be expanded...   I@21:58:02.977
  > SkolemizationMarker                                           I@21:58:02.977
  > ExpansionMarker                                               I@21:58:02.981
The set SUBSET ((0 .. 7) ∪ (8 .. 9)) will be expanded. This will blow up the solver. W@21:58:03.001
The set SUBSET ((0 .. 7) ∪ (8 .. 9)) will be expanded. This will blow up the solver. W@21:58:03.003
 > Running analyzers...                                           I@21:58:03.005
  > Introduced expression grades                                  I@21:58:03.066
  > Introduced 5 formula hints                                    I@21:58:03.067
PASS #13: PostTypeCheckerSnowcat                                  I@21:58:03.067
 > Running Snowcat .::.                                           I@21:58:03.067
 > Your types are great!                                          I@21:58:07.373
 > All expressions are typed                                      I@21:58:07.373
PASS #14: BoundedChecker                                          I@21:58:07.455
State 0: Checking 30 invariants                                   I@21:58:07.747
Step 0: picking a transition out of 1 transition(s)               I@21:58:08.582
The outcome is: NoError                                           I@21:58:08.588
PASS #15: Terminal                                                I@21:58:08.588
Checker reports no error up to computation length 0               I@21:58:08.588
It took me 0 days  0 hours  0 min  8 sec                          I@21:58:08.589
Total time: 8.753 sec                                             I@21:58:08.589
EXITCODE: OK


\* 2. Checking that Next preserves IndInv:

$ apalache check --init=IndInv --inv=IndInv --length=1 MC_safety_2good_8bad.tla 
Assuming you bind-mounted your local directory into /var/apalache...
# Tool home: /opt/apalache
# Package:   /opt/apalache/mod-distribution/target/apalache-pkg-0.15.4-SNAPSHOT-full.jar
# JVM args: -Xmx4096m -DTLA-Library=/opt/apalache/src/tla
#
Picked up _JAVA_OPTIONS: -Djdk.net.URLClassPath.disableClassPathURLCheck=true
# APALACHE version 0.15.4-SNAPSHOT build v0.15.3-24-g4b03fb2
#
# WARNING: This tool is in the experimental stage.
#          Please report bugs at: [https://github.com/informalsystems/apalache/issues]
# 
# Usage statistics is OFF. We care about your privacy.
# If you want to help our project, consider enabling statistics with config --enable-stats=true.

Checker options: filename=MC_safety_2good_8bad.tla, init=IndInv, next=, inv=IndInv I@21:59:15.963
Tuning:                                                           I@21:59:16.185
PASS #0: SanyParser                                               I@21:59:16.186
Parsing file /var/apalache/MC_safety_2good_8bad.tla
Parsing file /var/apalache/Handshaking_nack_peers.tla
Parsing file /tmp/TLC.tla
Parsing file /tmp/FiniteSets.tla
Parsing file /tmp/Naturals.tla
Parsing file /tmp/Sequences.tla
PASS #1: TypeCheckerSnowcat                                       I@21:59:16.853
 > Running Snowcat .::.                                           I@21:59:16.853
 > Your types are great!                                          I@21:59:17.850
 > All expressions are typed                                      I@21:59:17.850
PASS #2: ConfigurationPass                                        I@21:59:17.949
  > MC_safety_2good_8bad.cfg: Loading TLC configuration           I@21:59:17.952
  > MC_safety_2good_8bad.cfg: Using SPECIFICATION Spec            I@21:59:17.999
  > MC_safety_2good_8bad.cfg: Init operator is set in TLC config but overridden via --init command line option; using IndInv W@21:59:17.999
  > Using the next predicate Next from the TLC config             I@21:59:17.999
  > MC_safety_2good_8bad.cfg: found INVARIANTS: TypeOK, NoSelfInteractions, GoodNodesOnlyConnectWithPeers, GoodNodesDoNotExceedMaxConnections, GoodNodesOnlyExchangeMessagesWithPeers, GoodNodesNeverHaveMessagesFromBlacklistedPeers, GoodNodesHaveExlcusiveInProgressAndConnections, GoodNodesOnlyConnectToNodesWithWhomTheyHaveExchangedAllMessages, GoodNodesOnlyExchangeMetaMessagesAfterSendingAndReceivingConnectionMessages, GoodNodesOnlyExchangeAckMessagesAfterSendingAndReceivingConnectionAndMetaMessages I@21:59:18.000
  > Overriding with command line arguments: --inv IndInv          W@21:59:18.000
  > Set the initialization predicate to IndInv                    I@21:59:18.002
  > Set the transition predicate to Next                          I@21:59:18.003
  > Set an invariant to IndInv                                    I@21:59:18.003
  > Replaced CONSTANT BAD_NODES with Bad_nodes()                  I@21:59:18.007
  > Replaced CONSTANT MIN with Min()                              I@21:59:18.007
  > Replaced CONSTANT MAX with Max()                              I@21:59:18.007
  > Replaced CONSTANT MIN_PEERS with Min_peers()                  I@21:59:18.008
  > Replaced CONSTANT GOOD_NODES with Good_nodes()                I@21:59:18.008
PASS #3: DesugarerPass                                            I@21:59:18.072
  > Desugaring...                                                 I@21:59:18.073
PASS #4: UnrollPass                                               I@21:59:18.135
  > Unroller                                                      I@21:59:18.188
PASS #5: PrimingPass                                              I@21:59:18.253
  > Introducing IndInvPrimed for IndInv'                          I@21:59:18.258
PASS #6: CoverAnalysisPass                                        I@21:59:18.313
PASS #7: InlinePass                                               I@21:59:18.313
  > InlinerOfUserOper                                             I@21:59:18.314
  > LetInExpander                                                 I@21:59:18.370
  > InlinerOfUserOper                                             I@21:59:18.381
Leaving only relevant operators: CInitPrimed, IndInv, IndInvPrimed, Next I@21:59:18.388
PASS #8: VCGen                                                    I@21:59:18.440
  > Producing verification conditions from the invariant IndInv   I@21:59:18.440
  > VCGen produced 30 verification condition(s)                   I@21:59:18.442
PASS #9: PreprocessingPass                                        I@21:59:18.501
  > Before preprocessing: unique renaming                         I@21:59:18.501
 > Applying standard transformations:                             I@21:59:18.507
  > PrimePropagation                                              I@21:59:18.507
  > Desugarer                                                     I@21:59:18.567
  > UniqueRenamer                                                 I@21:59:18.642
  > Normalizer                                                    I@21:59:18.745
  > Keramelizer                                                   I@21:59:18.826
  > After preprocessing: UniqueRenamer                            I@21:59:18.924
PASS #10: TransitionFinderPass                                    I@21:59:19.036
  > Found 1 initializing transitions                              I@21:59:19.085
  > Found 20 transitions                                          I@21:59:19.161
  > No constant initializer                                       I@21:59:19.162
  > Applying unique renaming                                      I@21:59:19.162
PASS #11: OptimizationPass                                        I@21:59:19.239
 > Applying optimizations:                                        I@21:59:19.243
  > ConstSimplifier                                               I@21:59:19.243
  > ExprOptimizer                                                 I@21:59:19.280
  > ConstSimplifier                                               I@21:59:19.311
PASS #12: AnalysisPass                                            I@21:59:19.398
 > Marking skolemizable existentials and sets to be expanded...   I@21:59:19.399
  > SkolemizationMarker                                           I@21:59:19.400
  > ExpansionMarker                                               I@21:59:19.404
The set SUBSET ((0 .. 7) ∪ (8 .. 9)) will be expanded. This will blow up the solver. W@21:59:19.408
The set SUBSET ((0 .. 7) ∪ (8 .. 9)) will be expanded. This will blow up the solver. W@21:59:19.426
The set SUBSET ((0 .. 7) ∪ (8 .. 9)) will be expanded. This will blow up the solver. W@21:59:19.426
 > Running analyzers...                                           I@21:59:19.429
  > Introduced expression grades                                  I@21:59:19.493
  > Introduced 8 formula hints                                    I@21:59:19.493
PASS #13: PostTypeCheckerSnowcat                                  I@21:59:19.494
 > Running Snowcat .::.                                           I@21:59:19.494
 > Your types are great!                                          I@21:59:25.555
 > All expressions are typed                                      I@21:59:25.555
PASS #14: BoundedChecker                                          I@21:59:25.652
State 0: Checking 30 invariants                                   I@22:00:00.642
(Please report an issue at: [https://github.com/informalsystems/apalache/issues],java.lang.OutOfMemoryError: Java heap space)
Unhandled exception                                               E@22:07:35.253
java.lang.OutOfMemoryError: Java heap space
        at at.forsyte.apalache.tla.lir.UID$.unique(identifiers.scala:48)
        at at.forsyte.apalache.tla.lir.Identifiable.$init$(identifiers.scala:53)
        at at.forsyte.apalache.tla.lir.TlaEx.<init>(TlaEx.scala:11)
        at at.forsyte.apalache.tla.lir.ValEx.<init>(TlaEx.scala:37)
        at at.forsyte.apalache.tla.pp.ConstSimplifierBase.$anonfun$simplifyShallow$2(ConstSimplifierBase.scala:111)
        at at.forsyte.apalache.tla.pp.ConstSimplifierBase.$anonfun$simplifyShallow$2$adapted(ConstSimplifierBase.scala:111)
        at at.forsyte.apalache.tla.pp.ConstSimplifierBase$$Lambda$1005/468033320.apply(Unknown Source)
        at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:303)
        at scala.collection.TraversableLike$$Lambda$1008/1833707324.apply(Unknown Source)
        at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
        at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
        at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
        at scala.collection.TraversableLike.filterImpl(TraversableLike.scala:302)
        at scala.collection.TraversableLike.filterImpl$(TraversableLike.scala:296)
        at scala.collection.AbstractTraversable.filterImpl(Traversable.scala:108)
        at scala.collection.TraversableLike.filterNot(TraversableLike.scala:402)
        at scala.collection.TraversableLike.filterNot$(TraversableLike.scala:402)
        at scala.collection.AbstractTraversable.filterNot(Traversable.scala:108)
        at at.forsyte.apalache.tla.pp.ConstSimplifierBase.$anonfun$simplifyShallow$1(ConstSimplifierBase.scala:111)
        at at.forsyte.apalache.tla.pp.ConstSimplifierBase$$Lambda$1004/582702662.apply(Unknown Source)
        at at.forsyte.apalache.tla.bmcmt.rewriter.ConstSimplifierForSmt.$anonfun$simplifyShallow$1(ConstSimplifierForSmt.scala:65)
        at at.forsyte.apalache.tla.bmcmt.rewriter.ConstSimplifierForSmt$$Lambda$1060/1061806694.apply(Unknown Source)
        at at.forsyte.apalache.tla.bmcmt.smt.Z3SolverContext.toExpr(Z3SolverContext.scala:417)
        at at.forsyte.apalache.tla.bmcmt.smt.Z3SolverContext.$anonfun$toExpr$6(Z3SolverContext.scala:488)
        at at.forsyte.apalache.tla.bmcmt.smt.Z3SolverContext$$Lambda$1178/964131538.apply(Unknown Source)
        at scala.collection.immutable.List.map(List.scala:297)
        at at.forsyte.apalache.tla.bmcmt.smt.Z3SolverContext.toExpr(Z3SolverContext.scala:488)
        at at.forsyte.apalache.tla.bmcmt.smt.Z3SolverContext.$anonfun$toExpr$6(Z3SolverContext.scala:488)
        at at.forsyte.apalache.tla.bmcmt.smt.Z3SolverContext$$Lambda$1178/964131538.apply(Unknown Source)
        at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
        at scala.collection.TraversableLike$$Lambda$11/912011468.apply(Unknown Source)
        at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
It took me 0 days  0 hours  8 min 19 sec                          I@22:07:35.254
Total time: 499.291 sec                                           I@22:07:35.254
EXITCODE: ERROR (99)
