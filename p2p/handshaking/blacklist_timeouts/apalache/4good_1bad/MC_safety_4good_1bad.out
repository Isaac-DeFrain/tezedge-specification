\* Checking IndInv is an inductive invariant

\* 1. Checking Init satisfies IndInv:

$ apalache check --init=Init --inv=IndInv --length=0 MC_safety_4good_1bad.tla 
Assuming you bind-mounted your local directory into /var/apalache...
# Tool home: /opt/apalache
# Package:   /opt/apalache/mod-distribution/target/apalache-pkg-0.15.3-SNAPSHOT-full.jar
# JVM args: -Xmx4096m -DTLA-Library=/opt/apalache/src/tla
#
Picked up _JAVA_OPTIONS: -Djdk.net.URLClassPath.disableClassPathURLCheck=true
# APALACHE version 0.15.3-SNAPSHOT build v0.15.1-33-g80cf914
#
# WARNING: This tool is in the experimental stage.
#          Please report bugs at: [https://github.com/informalsystems/apalache/issues]
# 
# Usage statistics is OFF. We care about your privacy.
# If you want to help our project, consider enabling statistics with config --enable-stats=true.

Checker options: filename=MC_safety_4good_1bad.tla, init=Init, next=, inv=IndInv I@20:47:54.307
Tuning:                                                           I@20:47:54.524
PASS #0: SanyParser                                               I@20:47:54.525
Parsing file /var/apalache/MC_safety_4good_1bad.tla
Parsing file /var/apalache/Handshaking.tla
Parsing file /tmp/TLC.tla
Parsing file /tmp/FiniteSets.tla
Parsing file /tmp/Naturals.tla
Parsing file /tmp/Sequences.tla
PASS #1: TypeCheckerSnowcat                                       I@20:47:55.131
 > Running Snowcat .::.                                           I@20:47:55.131
 > Your types are great!                                          I@20:47:55.695
 > All expressions are typed                                      I@20:47:55.696
PASS #2: ConfigurationPass                                        I@20:47:55.738
  > MC_safety_4good_1bad.cfg: Loading TLC configuration           I@20:47:55.741
  > MC_safety_4good_1bad.cfg: Using SPECIFICATION Spec            I@20:47:55.782
  > MC_safety_4good_1bad.cfg: Init operator is set in TLC config but overridden via --init command line option; using Init W@20:47:55.783
  > Using the next predicate Next from the TLC config             I@20:47:55.783
  > MC_safety_4good_1bad.cfg: found INVARIANTS: TypeOK, NoSelfInteractions, GoodNodesDoNotExceedMaxConnections, GoodNodesNeverHaveMessagesFromBlacklistedPeers, GoodNodesHaveExlcusiveInProgressAndConnections, GoodNodesOnlyConnectToNodesWithWhomTheyHaveExchangedAllMessages, GoodNodesOnlyExchangeMetaMessagesAfterSendingAndReceivingConnectionMessages, GoodNodesOnlyExchangeAckMessagesAfterSendingAndReceivingConnectionAndMetaMessages I@20:47:55.783
  > Overriding with command line arguments: --inv IndInv          W@20:47:55.784
  > Set the initialization predicate to Init                      I@20:47:55.785
  > Set the transition predicate to Next                          I@20:47:55.786
  > Set an invariant to IndInv                                    I@20:47:55.786
  > Replaced CONSTANT BAD_NODES with Bad_nodes()                  I@20:47:55.789
  > Replaced CONSTANT MIN with Min()                              I@20:47:55.789
  > Replaced CONSTANT MAX with Max()                              I@20:47:55.789
  > Replaced CONSTANT GOOD_NODES with Good_nodes()                I@20:47:55.790
PASS #3: DesugarerPass                                            I@20:47:55.845
  > Desugaring...                                                 I@20:47:55.845
PASS #4: UnrollPass                                               I@20:47:55.894
  > Unroller                                                      I@20:47:55.939
PASS #5: PrimingPass                                              I@20:47:55.989
  > Introducing InitPrimed for Init'                              I@20:47:55.992
PASS #6: CoverAnalysisPass                                        I@20:47:56.023
PASS #7: InlinePass                                               I@20:47:56.023
  > InlinerOfUserOper                                             I@20:47:56.024
  > LetInExpander                                                 I@20:47:56.061
  > InlinerOfUserOper                                             I@20:47:56.072
Leaving only relevant operators: CInitPrimed, IndInv, Init, InitPrimed, Next I@20:47:56.076
PASS #8: VCGen                                                    I@20:47:56.111
  > Producing verification conditions from the invariant IndInv   I@20:47:56.111
  > VCGen produced 26 verification condition(s)                   I@20:47:56.113
PASS #9: PreprocessingPass                                        I@20:47:56.150
  > Before preprocessing: unique renaming                         I@20:47:56.150
 > Applying standard transformations:                             I@20:47:56.156
  > PrimePropagation                                              I@20:47:56.157
  > Desugarer                                                     I@20:47:56.199
  > UniqueRenamer                                                 I@20:47:56.243
  > Normalizer                                                    I@20:47:56.302
  > Keramelizer                                                   I@20:47:56.355
  > After preprocessing: UniqueRenamer                            I@20:47:56.422
PASS #10: TransitionFinderPass                                    I@20:47:56.488
  > Found 1 initializing transitions                              I@20:47:56.536
  > Found 17 transitions                                          I@20:47:56.608
  > No constant initializer                                       I@20:47:56.608
  > Applying unique renaming                                      I@20:47:56.608
PASS #11: OptimizationPass                                        I@20:47:56.665
 > Applying optimizations:                                        I@20:47:56.668
  > ConstSimplifier                                               I@20:47:56.669
  > ExprOptimizer                                                 I@20:47:56.703
  > ConstSimplifier                                               I@20:47:56.721
PASS #12: AnalysisPass                                            I@20:47:56.780
 > Marking skolemizable existentials and sets to be expanded...   I@20:47:56.782
  > SkolemizationMarker                                           I@20:47:56.783
  > ExpansionMarker                                               I@20:47:56.787
 > Running analyzers...                                           I@20:47:56.808
  > Introduced expression grades                                  I@20:47:56.857
  > Introduced 4 formula hints                                    I@20:47:56.857
PASS #13: PostTypeCheckerSnowcat                                  I@20:47:56.858
 > Running Snowcat .::.                                           I@20:47:56.858
 > Your types are great!                                          I@20:47:59.179
 > All expressions are typed                                      I@20:47:59.179
PASS #14: BoundedChecker                                          I@20:47:59.199
State 0: Checking 26 invariants                                   I@20:47:59.473
Step 0: picking a transition out of 1 transition(s)               I@20:47:59.637
The outcome is: NoError                                           I@20:47:59.640
PASS #15: Terminal                                                I@20:47:59.641
Checker reports no error up to computation length 0               I@20:47:59.641
It took me 0 days  0 hours  0 min  5 sec                          I@20:47:59.641
Total time: 5.335 sec                                             I@20:47:59.641
EXITCODE: OK


\* 2. Checking that Next preserves IndInv:

$ apalache check --init=IndInv --inv=IndInv --length=1 MC_safety_4good_1bad.tla 
Assuming you bind-mounted your local directory into /var/apalache...
# Tool home: /opt/apalache
# Package:   /opt/apalache/mod-distribution/target/apalache-pkg-0.15.3-SNAPSHOT-full.jar
# JVM args: -Xmx4096m -DTLA-Library=/opt/apalache/src/tla
#
Picked up _JAVA_OPTIONS: -Djdk.net.URLClassPath.disableClassPathURLCheck=true
# APALACHE version 0.15.3-SNAPSHOT build v0.15.1-33-g80cf914
#
# WARNING: This tool is in the experimental stage.
#          Please report bugs at: [https://github.com/informalsystems/apalache/issues]
# 
# Usage statistics is OFF. We care about your privacy.
# If you want to help our project, consider enabling statistics with config --enable-stats=true.

Checker options: filename=MC_safety_4good_1bad.tla, init=IndInv, next=, inv=IndInv I@20:48:48.869
Tuning:                                                           I@20:48:49.082
PASS #0: SanyParser                                               I@20:48:49.082
Parsing file /var/apalache/MC_safety_4good_1bad.tla
Parsing file /var/apalache/Handshaking.tla
Parsing file /tmp/TLC.tla
Parsing file /tmp/FiniteSets.tla
Parsing file /tmp/Naturals.tla
Parsing file /tmp/Sequences.tla
PASS #1: TypeCheckerSnowcat                                       I@20:48:49.725
 > Running Snowcat .::.                                           I@20:48:49.725
 > Your types are great!                                          I@20:48:50.293
 > All expressions are typed                                      I@20:48:50.293
PASS #2: ConfigurationPass                                        I@20:48:50.336
  > MC_safety_4good_1bad.cfg: Loading TLC configuration           I@20:48:50.339
  > MC_safety_4good_1bad.cfg: Using SPECIFICATION Spec            I@20:48:50.379
  > MC_safety_4good_1bad.cfg: Init operator is set in TLC config but overridden via --init command line option; using IndInv W@20:48:50.379
  > Using the next predicate Next from the TLC config             I@20:48:50.380
  > MC_safety_4good_1bad.cfg: found INVARIANTS: TypeOK, NoSelfInteractions, GoodNodesDoNotExceedMaxConnections, GoodNodesNeverHaveMessagesFromBlacklistedPeers, GoodNodesHaveExlcusiveInProgressAndConnections, GoodNodesOnlyConnectToNodesWithWhomTheyHaveExchangedAllMessages, GoodNodesOnlyExchangeMetaMessagesAfterSendingAndReceivingConnectionMessages, GoodNodesOnlyExchangeAckMessagesAfterSendingAndReceivingConnectionAndMetaMessages I@20:48:50.380
  > Overriding with command line arguments: --inv IndInv          W@20:48:50.380
  > Set the initialization predicate to IndInv                    I@20:48:50.382
  > Set the transition predicate to Next                          I@20:48:50.382
  > Set an invariant to IndInv                                    I@20:48:50.382
  > Replaced CONSTANT BAD_NODES with Bad_nodes()                  I@20:48:50.384
  > Replaced CONSTANT MIN with Min()                              I@20:48:50.385
  > Replaced CONSTANT MAX with Max()                              I@20:48:50.385
  > Replaced CONSTANT GOOD_NODES with Good_nodes()                I@20:48:50.385
PASS #3: DesugarerPass                                            I@20:48:50.446
  > Desugaring...                                                 I@20:48:50.447
PASS #4: UnrollPass                                               I@20:48:50.494
  > Unroller                                                      I@20:48:50.549
PASS #5: PrimingPass                                              I@20:48:50.608
  > Introducing IndInvPrimed for IndInv'                          I@20:48:50.611
PASS #6: CoverAnalysisPass                                        I@20:48:50.657
PASS #7: InlinePass                                               I@20:48:50.657
  > InlinerOfUserOper                                             I@20:48:50.658
  > LetInExpander                                                 I@20:48:50.693
  > InlinerOfUserOper                                             I@20:48:50.707
Leaving only relevant operators: CInitPrimed, IndInv, IndInvPrimed, Next I@20:48:50.712
PASS #8: VCGen                                                    I@20:48:50.748
  > Producing verification conditions from the invariant IndInv   I@20:48:50.748
  > VCGen produced 26 verification condition(s)                   I@20:48:50.750
PASS #9: PreprocessingPass                                        I@20:48:50.790
  > Before preprocessing: unique renaming                         I@20:48:50.790
 > Applying standard transformations:                             I@20:48:50.794
  > PrimePropagation                                              I@20:48:50.795
  > Desugarer                                                     I@20:48:50.840
  > UniqueRenamer                                                 I@20:48:50.884
  > Normalizer                                                    I@20:48:50.944
  > Keramelizer                                                   I@20:48:51.002
  > After preprocessing: UniqueRenamer                            I@20:48:51.087
PASS #10: TransitionFinderPass                                    I@20:48:51.163
  > Found 1 initializing transitions                              I@20:48:51.211
  > Found 17 transitions                                          I@20:48:51.277
  > No constant initializer                                       I@20:48:51.277
  > Applying unique renaming                                      I@20:48:51.278
PASS #11: OptimizationPass                                        I@20:48:51.344
 > Applying optimizations:                                        I@20:48:51.347
  > ConstSimplifier                                               I@20:48:51.347
  > ExprOptimizer                                                 I@20:48:51.376
  > ConstSimplifier                                               I@20:48:51.397
PASS #12: AnalysisPass                                            I@20:48:51.463
 > Marking skolemizable existentials and sets to be expanded...   I@20:48:51.464
  > SkolemizationMarker                                           I@20:48:51.465
  > ExpansionMarker                                               I@20:48:51.468
 > Running analyzers...                                           I@20:48:51.489
  > Introduced expression grades                                  I@20:48:51.542
  > Introduced 7 formula hints                                    I@20:48:51.542
PASS #13: PostTypeCheckerSnowcat                                  I@20:48:51.542
 > Running Snowcat .::.                                           I@20:48:51.542
 > Your types are great!                                          I@20:48:55.174
 > All expressions are typed                                      I@20:48:55.174
PASS #14: BoundedChecker                                          I@20:48:55.196
State 0: Checking 26 invariants                                   I@20:48:56.203
Step 0: picking a transition out of 1 transition(s)               I@20:48:56.746
State 1: Checking 12 invariants                                   I@20:48:56.905
State 1: Checking 26 invariants                                   I@20:48:57.657
State 1: Checking 10 invariants                                   I@20:48:58.407
State 1: Checking 14 invariants                                   I@20:48:59.454
State 1: Checking 10 invariants                                   I@20:49:00.755
State 1: Checking 10 invariants                                   I@20:49:01.874
State 1: Checking 15 invariants                                   I@20:49:03.039
State 1: Checking 13 invariants                                   I@20:49:04.362
State 1: Checking 26 invariants                                   I@20:49:05.163
State 1: Checking 26 invariants                                   I@20:49:06.905
State 1: Checking 26 invariants                                   I@20:49:08.161
State 1: Checking 26 invariants                                   I@20:49:09.522
State 1: Checking 26 invariants                                   I@20:49:10.828
State 1: Checking 26 invariants                                   I@20:49:12.155
State 1: Checking 3 invariants                                    I@20:49:13.545
State 1: Checking 26 invariants                                   I@20:49:14.335
State 1: Checking 26 invariants                                   I@20:49:15.711
Step 1: picking a transition out of 17 transition(s)              I@20:49:16.857
The outcome is: NoError                                           I@20:49:17.444
PASS #15: Terminal                                                I@20:49:17.444
Checker reports no error up to computation length 1               I@20:49:17.444
It took me 0 days  0 hours  0 min 28 sec                          I@20:49:17.444
Total time: 28.576 sec                                            I@20:49:17.444
EXITCODE: OK
