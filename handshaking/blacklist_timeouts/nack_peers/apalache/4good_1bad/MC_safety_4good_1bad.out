Apalache version: 0.15.4-SNAPSHOT build v0.15.3-16-gc052ea0

\* 1. Checking Init satisfies IndInv:

$ apalache check --init=Init --inv=IndInv --length=0 MC_safety_4good_1bad.tla 
Assuming you bind-mounted your local directory into /var/apalache...
# Tool home: /opt/apalache
# Package:   /opt/apalache/mod-distribution/target/apalache-pkg-0.15.4-SNAPSHOT-full.jar
# JVM args: -Xmx4096m -DTLA-Library=/opt/apalache/src/tla
#
Picked up _JAVA_OPTIONS: -Djdk.net.URLClassPath.disableClassPathURLCheck=true
# APALACHE version 0.15.4-SNAPSHOT build v0.15.3-16-gc052ea0
#
# WARNING: This tool is in the experimental stage.
#          Please report bugs at: [https://github.com/informalsystems/apalache/issues]
# 
# Usage statistics is OFF. We care about your privacy.
# If you want to help our project, consider enabling statistics with config --enable-stats=true.

Checker options: filename=MC_safety_4good_1bad.tla, init=Init, next=, inv=IndInv I@05:29:24.598
Tuning:                                                           I@05:29:25.079
PASS #0: SanyParser                                               I@05:29:25.098
Parsing file /var/apalache/MC_safety_4good_1bad.tla
Parsing file /var/apalache/Handshaking_nack_peers.tla
Parsing file /tmp/TLC.tla
Parsing file /tmp/FiniteSets.tla
Parsing file /tmp/Naturals.tla
Parsing file /tmp/Sequences.tla
PASS #1: TypeCheckerSnowcat                                       I@05:29:25.853
 > Running Snowcat .::.                                           I@05:29:25.853
 > Your types are great!                                          I@05:29:26.742
 > All expressions are typed                                      I@05:29:26.743
PASS #2: ConfigurationPass                                        I@05:29:26.834
  > MC_safety_4good_1bad.cfg: Loading TLC configuration           I@05:29:26.836
  > MC_safety_4good_1bad.cfg: Using SPECIFICATION Spec            I@05:29:26.885
  > MC_safety_4good_1bad.cfg: Init operator is set in TLC config but overridden via --init command line option; using Init W@05:29:26.885
  > Using the next predicate Next from the TLC config             I@05:29:26.885
  > MC_safety_4good_1bad.cfg: found INVARIANTS: TypeOK, NoSelfInteractions, GoodNodesOnlyConnectWithPeers, GoodNodesDoNotExceedMaxConnections, GoodNodesOnlyExchangeMessagesWithPeers, GoodNodesNeverHaveMessagesFromBlacklistedPeers, GoodNodesHaveExlcusiveInProgressAndConnections, GoodNodesOnlyConnectToNodesWithWhomTheyHaveExchangedAllMessages, GoodNodesOnlyExchangeMetaMessagesAfterSendingAndReceivingConnectionMessages, GoodNodesOnlyExchangeAckMessagesAfterSendingAndReceivingConnectionAndMetaMessages I@05:29:26.885
  > Overriding with command line arguments: --inv IndInv          W@05:29:26.886
  > Set the initialization predicate to Init                      I@05:29:26.887
  > Set the transition predicate to Next                          I@05:29:26.888
  > Set an invariant to IndInv                                    I@05:29:26.888
  > Replaced CONSTANT BAD_NODES with Bad_nodes()                  I@05:29:26.890
  > Replaced CONSTANT MIN with Min()                              I@05:29:26.890
  > Replaced CONSTANT MAX with Max()                              I@05:29:26.890
  > Replaced CONSTANT MIN_PEERS with Min_peers()                  I@05:29:26.890
  > Replaced CONSTANT GOOD_NODES with Good_nodes()                I@05:29:26.890
PASS #3: DesugarerPass                                            I@05:29:26.954
  > Desugaring...                                                 I@05:29:26.954
PASS #4: UnrollPass                                               I@05:29:27.019
  > Unroller                                                      I@05:29:27.061
PASS #5: PrimingPass                                              I@05:29:27.117
  > Introducing InitPrimed for Init'                              I@05:29:27.121
PASS #6: CoverAnalysisPass                                        I@05:29:27.162
PASS #7: InlinePass                                               I@05:29:27.162
  > InlinerOfUserOper                                             I@05:29:27.163
  > LetInExpander                                                 I@05:29:27.214
  > InlinerOfUserOper                                             I@05:29:27.227
Leaving only relevant operators: CInitPrimed, IndInv, Init, InitPrimed, Next I@05:29:27.232
PASS #8: VCGen                                                    I@05:29:27.277
  > Producing verification conditions from the invariant IndInv   I@05:29:27.278
  > VCGen produced 30 verification condition(s)                   I@05:29:27.279
PASS #9: PreprocessingPass                                        I@05:29:27.347
  > Before preprocessing: unique renaming                         I@05:29:27.347
 > Applying standard transformations:                             I@05:29:27.352
  > PrimePropagation                                              I@05:29:27.353
  > Desugarer                                                     I@05:29:27.411
  > UniqueRenamer                                                 I@05:29:27.465
  > Normalizer                                                    I@05:29:27.538
  > Keramelizer                                                   I@05:29:27.610
  > After preprocessing: UniqueRenamer                            I@05:29:27.693
PASS #10: TransitionFinderPass                                    I@05:29:27.790
  > Found 1 initializing transitions                              I@05:29:27.833
  > Found 20 transitions                                          I@05:29:27.906
  > No constant initializer                                       I@05:29:27.906
  > Applying unique renaming                                      I@05:29:27.906
PASS #11: OptimizationPass                                        I@05:29:28.008
 > Applying optimizations:                                        I@05:29:28.012
  > ConstSimplifier                                               I@05:29:28.013
  > ExprOptimizer                                                 I@05:29:28.050
  > ConstSimplifier                                               I@05:29:28.089
PASS #12: AnalysisPass                                            I@05:29:28.176
 > Marking skolemizable existentials and sets to be expanded...   I@05:29:28.177
  > SkolemizationMarker                                           I@05:29:28.178
  > ExpansionMarker                                               I@05:29:28.181
The set SUBSET ((0 .. 0) ∪ (1 .. 4)) will be expanded. This will blow up the solver. W@05:29:28.203
The set SUBSET ((0 .. 0) ∪ (1 .. 4)) will be expanded. This will blow up the solver. W@05:29:28.204
 > Running analyzers...                                           I@05:29:28.207
  > Introduced expression grades                                  I@05:29:28.280
  > Introduced 5 formula hints                                    I@05:29:28.281
PASS #13: PostTypeCheckerSnowcat                                  I@05:29:28.281
 > Running Snowcat .::.                                           I@05:29:28.281
[unknown location]: Expected a concrete type of operator ps$3, found polymorphic type: (() => a178) E@05:29:30.257
 > Snowcat asks you to fix the types. Meow.                       I@05:29:30.257
Checker has found an error                                        I@05:29:30.263
It took me 0 days  0 hours  0 min  5 sec                          I@05:29:30.263
Total time: 5.666 sec                                             I@05:29:30.263
EXITCODE: OK


\* 2. Checking that Next preserves IndInv:

$ apalache check --init=IndInv --inv=IndInv --length=1 MC_safety_4good_1bad.tla 
Assuming you bind-mounted your local directory into /var/apalache...
# Tool home: /opt/apalache
# Package:   /opt/apalache/mod-distribution/target/apalache-pkg-0.15.4-SNAPSHOT-full.jar
# JVM args: -Xmx4096m -DTLA-Library=/opt/apalache/src/tla
#
Picked up _JAVA_OPTIONS: -Djdk.net.URLClassPath.disableClassPathURLCheck=true
# APALACHE version 0.15.4-SNAPSHOT build v0.15.3-16-gc052ea0
#
# WARNING: This tool is in the experimental stage.
#          Please report bugs at: [https://github.com/informalsystems/apalache/issues]
# 
# Usage statistics is OFF. We care about your privacy.
# If you want to help our project, consider enabling statistics with config --enable-stats=true.

Checker options: filename=MC_safety_4good_1bad.tla, init=IndInv, next=, inv=IndInv I@05:30:44.381
Tuning:                                                           I@05:30:44.600
PASS #0: SanyParser                                               I@05:30:44.600
Parsing file /var/apalache/MC_safety_4good_1bad.tla
Parsing file /var/apalache/Handshaking_nack_peers.tla
Parsing file /tmp/TLC.tla
Parsing file /tmp/FiniteSets.tla
Parsing file /tmp/Naturals.tla
Parsing file /tmp/Sequences.tla
PASS #1: TypeCheckerSnowcat                                       I@05:30:45.246
 > Running Snowcat .::.                                           I@05:30:45.247
 > Your types are great!                                          I@05:30:46.081
 > All expressions are typed                                      I@05:30:46.082
PASS #2: ConfigurationPass                                        I@05:30:46.178
  > MC_safety_4good_1bad.cfg: Loading TLC configuration           I@05:30:46.181
  > MC_safety_4good_1bad.cfg: Using SPECIFICATION Spec            I@05:30:46.225
  > MC_safety_4good_1bad.cfg: Init operator is set in TLC config but overridden via --init command line option; using IndInv W@05:30:46.225
  > Using the next predicate Next from the TLC config             I@05:30:46.225
  > MC_safety_4good_1bad.cfg: found INVARIANTS: TypeOK, NoSelfInteractions, GoodNodesOnlyConnectWithPeers, GoodNodesDoNotExceedMaxConnections, GoodNodesOnlyExchangeMessagesWithPeers, GoodNodesNeverHaveMessagesFromBlacklistedPeers, GoodNodesHaveExlcusiveInProgressAndConnections, GoodNodesOnlyConnectToNodesWithWhomTheyHaveExchangedAllMessages, GoodNodesOnlyExchangeMetaMessagesAfterSendingAndReceivingConnectionMessages, GoodNodesOnlyExchangeAckMessagesAfterSendingAndReceivingConnectionAndMetaMessages I@05:30:46.225
  > Overriding with command line arguments: --inv IndInv          W@05:30:46.226
  > Set the initialization predicate to IndInv                    I@05:30:46.227
  > Set the transition predicate to Next                          I@05:30:46.227
  > Set an invariant to IndInv                                    I@05:30:46.228
  > Replaced CONSTANT BAD_NODES with Bad_nodes()                  I@05:30:46.230
  > Replaced CONSTANT MIN with Min()                              I@05:30:46.231
  > Replaced CONSTANT MAX with Max()                              I@05:30:46.231
  > Replaced CONSTANT MIN_PEERS with Min_peers()                  I@05:30:46.231
  > Replaced CONSTANT GOOD_NODES with Good_nodes()                I@05:30:46.231
PASS #3: DesugarerPass                                            I@05:30:46.299
  > Desugaring...                                                 I@05:30:46.300
PASS #4: UnrollPass                                               I@05:30:46.357
  > Unroller                                                      I@05:30:46.406
PASS #5: PrimingPass                                              I@05:30:46.468
  > Introducing IndInvPrimed for IndInv'                          I@05:30:46.471
PASS #6: CoverAnalysisPass                                        I@05:30:46.523
PASS #7: InlinePass                                               I@05:30:46.524
  > InlinerOfUserOper                                             I@05:30:46.524
  > LetInExpander                                                 I@05:30:46.573
  > InlinerOfUserOper                                             I@05:30:46.585
Leaving only relevant operators: CInitPrimed, IndInv, IndInvPrimed, Next I@05:30:46.592
PASS #8: VCGen                                                    I@05:30:46.636
  > Producing verification conditions from the invariant IndInv   I@05:30:46.637
  > VCGen produced 30 verification condition(s)                   I@05:30:46.638
PASS #9: PreprocessingPass                                        I@05:30:46.695
  > Before preprocessing: unique renaming                         I@05:30:46.695
 > Applying standard transformations:                             I@05:30:46.700
  > PrimePropagation                                              I@05:30:46.701
  > Desugarer                                                     I@05:30:46.758
  > UniqueRenamer                                                 I@05:30:46.811
  > Normalizer                                                    I@05:30:46.887
  > Keramelizer                                                   I@05:30:46.957
  > After preprocessing: UniqueRenamer                            I@05:30:47.042
PASS #10: TransitionFinderPass                                    I@05:30:47.135
  > Found 1 initializing transitions                              I@05:30:47.179
  > Found 20 transitions                                          I@05:30:47.250
  > No constant initializer                                       I@05:30:47.250
  > Applying unique renaming                                      I@05:30:47.251
PASS #11: OptimizationPass                                        I@05:30:47.337
 > Applying optimizations:                                        I@05:30:47.341
  > ConstSimplifier                                               I@05:30:47.342
  > ExprOptimizer                                                 I@05:30:47.378
  > ConstSimplifier                                               I@05:30:47.419
PASS #12: AnalysisPass                                            I@05:30:47.506
 > Marking skolemizable existentials and sets to be expanded...   I@05:30:47.507
  > SkolemizationMarker                                           I@05:30:47.508
  > ExpansionMarker                                               I@05:30:47.511
The set SUBSET ((0 .. 0) ∪ (1 .. 4)) will be expanded. This will blow up the solver. W@05:30:47.516
The set SUBSET ((0 .. 0) ∪ (1 .. 4)) will be expanded. This will blow up the solver. W@05:30:47.535
The set SUBSET ((0 .. 0) ∪ (1 .. 4)) will be expanded. This will blow up the solver. W@05:30:47.536
 > Running analyzers...                                           I@05:30:47.539
  > Introduced expression grades                                  I@05:30:47.607
  > Introduced 8 formula hints                                    I@05:30:47.608
PASS #13: PostTypeCheckerSnowcat                                  I@05:30:47.608
 > Running Snowcat .::.                                           I@05:30:47.608
[unknown location]: Expected a concrete type of operator ps$3, found polymorphic type: (() => a178) E@05:30:51.327
 > Snowcat asks you to fix the types. Meow.                       I@05:30:51.328
Checker has found an error                                        I@05:30:51.328
It took me 0 days  0 hours  0 min  6 sec                          I@05:30:51.328
Total time: 6.948 sec                                             I@05:30:51.328
EXITCODE: OK
